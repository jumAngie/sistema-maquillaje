// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Maquillaje.Entities.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace Maquillaje.DataAccess.Context
{
    public partial class TiendamaquillajeContext : DbContext
    {
        public TiendamaquillajeContext()
        {
        }

        public TiendamaquillajeContext(DbContextOptions<TiendamaquillajeContext> options)
            : base(options)
        {
        }

        public virtual DbSet<tbCategoriaProductos> tbCategoriaProductos { get; set; }
        public virtual DbSet<tbCategorias> tbCategorias { get; set; }
        public virtual DbSet<tbClientes> tbClientes { get; set; }
        public virtual DbSet<tbDepartamentos> tbDepartamentos { get; set; }
        public virtual DbSet<tbEmpleados> tbEmpleados { get; set; }
        public virtual DbSet<tbEstadoCivil> tbEstadoCivil { get; set; }
        public virtual DbSet<tbInventario> tbInventario { get; set; }
        public virtual DbSet<tbMetodoPago> tbMetodoPago { get; set; }
        public virtual DbSet<tbMunicipios> tbMunicipios { get; set; }
        public virtual DbSet<tbProductos> tbProductos { get; set; }
        public virtual DbSet<tbProveedores> tbProveedores { get; set; }
        public virtual DbSet<tbSucursales> tbSucursales { get; set; }
        public virtual DbSet<tbUsuarios> tbUsuarios { get; set; }
        public virtual DbSet<tbVentas> tbVentas { get; set; }
        public virtual DbSet<tbVentasDetalle> tbVentasDetalle { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS");

            modelBuilder.Entity<tbCategoriaProductos>(entity =>
            {
                entity.HasKey(e => e.cpr_Id)
                    .HasName("PK__tbCatego__4A20BB2C7B02E993");

                entity.ToTable("tbCategoriaProductos", "Maqui");

                entity.Property(e => e.cpr_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.cpr_FechaModi)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.cpr_CategoriaNavigation)
                    .WithMany(p => p.tbCategoriaProductos)
                    .HasForeignKey(d => d.cpr_Categoria)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Maqui_tbCategoriaProductos_Maqui_tbCategorias_cpr_Categoria");

                entity.HasOne(d => d.cpr_ProductoNavigation)
                    .WithMany(p => p.tbCategoriaProductos)
                    .HasForeignKey(d => d.cpr_Producto)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Maqui_tbCategoriaProductos_Maqui_tbProductos_cpr_Producto");
            });

            modelBuilder.Entity<tbCategorias>(entity =>
            {
                entity.HasKey(e => e.cat_Id)
                    .HasName("PK__tbCatego__DD5AD195E666D021");

                entity.ToTable("tbCategorias", "Maqui");

                entity.Property(e => e.cat_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.cat_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.cat_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.cat_FechaModi).HasColumnType("datetime");
            });

            modelBuilder.Entity<tbClientes>(entity =>
            {
                entity.HasKey(e => e.cli_ID)
                    .HasName("PK__tbClient__FFECE57703ED8CF4");

                entity.ToTable("tbClientes", "Gral");

                entity.HasIndex(e => e.cli_DNI, "UQ_Gral_tbClientes_cli_DNI")
                    .IsUnique();

                entity.Property(e => e.cli_Apellido)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.cli_DNI)
                    .IsRequired()
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.cli_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.cli_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.cli_FechaModi).HasColumnType("datetime");

                entity.Property(e => e.cli_FechaNacimiento).HasColumnType("date");

                entity.Property(e => e.cli_Nombre)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.cli_Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.cli_Telefono)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.HasOne(d => d.cli_EstadoCivilNavigation)
                    .WithMany(p => p.tbClientes)
                    .HasForeignKey(d => d.cli_EstadoCivil)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Gral_tbClientes_cli_EstadoCivil_Gral_tbEstadoCivil_est_ID");

                entity.HasOne(d => d.cli_MunicipioNavigation)
                    .WithMany(p => p.tbClientes)
                    .HasForeignKey(d => d.cli_Municipio)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Gral_tbClientes_cli_Municipio_Gral_tbMunicipios_mun_ID");
            });

            modelBuilder.Entity<tbDepartamentos>(entity =>
            {
                entity.HasKey(e => e.dep_ID)
                    .HasName("PK__tbDepart__BB4CBBC0348FE6BC");

                entity.ToTable("tbDepartamentos", "Gral");

                entity.Property(e => e.dep_Descripcion)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.dep_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.dep_FechaModi).HasColumnType("datetime");
            });

            modelBuilder.Entity<tbEmpleados>(entity =>
            {
                entity.HasKey(e => e.emp_ID)
                    .HasName("PK__tbEmplea__128545C92F6C765A");

                entity.ToTable("tbEmpleados", "Gral");

                entity.HasIndex(e => e.emp_DNI, "UQ_Gral_tbEmpleados_emp_DNI")
                    .IsUnique();

                entity.Property(e => e.emp_Apellido)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.emp_Correo)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.emp_DNI)
                    .IsRequired()
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.emp_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.emp_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.emp_FechaModi).HasColumnType("datetime");

                entity.Property(e => e.emp_FechaNacimiento).HasColumnType("date");

                entity.Property(e => e.emp_Nombre)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.emp_Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.emp_Telefono)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.HasOne(d => d.emp_EstadoCivilNavigation)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.emp_EstadoCivil)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Gral_tbEmpleados_emp_EstadoCivil_Gral_tbEstadoCivil_est_ID");

                entity.HasOne(d => d.emp_MunicipioNavigation)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.emp_Municipio)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Gral_tbEmpleados_emp_Municipio_Gral_tbMunicipios_mun_ID");

                entity.HasOne(d => d.emp_SucursalNavigation)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.emp_Sucursal)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Gral_tbEmpleados_emp_Sucursal_Gral_tbSucursales_emp_Sucursal_suc_Id");
            });

            modelBuilder.Entity<tbEstadoCivil>(entity =>
            {
                entity.HasKey(e => e.est_ID)
                    .HasName("PK__tbEstado__40ADEC904719FCCF");

                entity.ToTable("tbEstadoCivil", "Gral");

                entity.Property(e => e.est_Descripcion)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.est_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.est_FechaModi).HasColumnType("datetime");
            });

            modelBuilder.Entity<tbInventario>(entity =>
            {
                entity.HasKey(e => e.inv_Id)
                    .HasName("PK__tbInvent__A7F1E3E1A75715B1");

                entity.ToTable("tbInventario", "Maqui");

                entity.Property(e => e.inv_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.inv_FechaModi).HasColumnType("datetime");

                entity.HasOne(d => d.inv_ProductoNavigation)
                    .WithMany(p => p.tbInventario)
                    .HasForeignKey(d => d.inv_Producto)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Maqui_tbInventario_Maqui_tbProducto");
            });

            modelBuilder.Entity<tbMetodoPago>(entity =>
            {
                entity.HasKey(e => e.met_Id)
                    .HasName("PK__tbMetodo__820DEB1E6EC2B230");

                entity.ToTable("tbMetodoPago", "Maqui");

                entity.Property(e => e.met_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.met_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.met_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.met_FechaModi).HasColumnType("datetime");
            });

            modelBuilder.Entity<tbMunicipios>(entity =>
            {
                entity.HasKey(e => e.mun_ID)
                    .HasName("PK__tbMunici__130DA68F26D5DA9F");

                entity.ToTable("tbMunicipios", "Gral");

                entity.Property(e => e.mun_Descripcion)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.mun_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.mun_FechaModi).HasColumnType("datetime");

                entity.HasOne(d => d.mun_dep)
                    .WithMany(p => p.tbMunicipios)
                    .HasForeignKey(d => d.mun_depID)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Gral_tbMunicipios_mun_depID_Gral_tbDepartamentos_dep_ID");
            });

            modelBuilder.Entity<tbProductos>(entity =>
            {
                entity.HasKey(e => e.pro_Id)
                    .HasName("PK__tbProduc__335D708E971035E3");

                entity.ToTable("tbProductos", "Maqui");

                entity.HasIndex(e => e.pro_Codigo, "UK_Maqui_tbProductos_pro_Codigo")
                    .IsUnique();

                entity.Property(e => e.pro_Codigo)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.pro_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.pro_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.pro_FechaModi).HasColumnType("datetime");

                entity.Property(e => e.pro_Nombre)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.pro_Precio).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.pro_StockInicial)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.HasOne(d => d.pro_ProveedorNavigation)
                    .WithMany(p => p.tbProductos)
                    .HasForeignKey(d => d.pro_Proveedor)
                    .HasConstraintName("FK_Maqui_tbProductos_Maqui_tbProveedores_pro_Proveedor");
            });

            modelBuilder.Entity<tbProveedores>(entity =>
            {
                entity.HasKey(e => e.prv_ID)
                    .HasName("PK__tbProvee__28A716C8EF64C927");

                entity.ToTable("tbProveedores", "Maqui");

                entity.Property(e => e.prv_Direccion)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.prv_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.prv_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.prv_FechaModi).HasColumnType("datetime");

                entity.Property(e => e.prv_NombreCompañia)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.prv_NombreContacto)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.prv_TelefonoContacto)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.HasOne(d => d.prv_MunicipioNavigation)
                    .WithMany(p => p.tbProveedores)
                    .HasForeignKey(d => d.prv_Municipio)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("PK_Maqui_tbprveedores_Gral_tbMunicipios_prv_Municipio");
            });

            modelBuilder.Entity<tbSucursales>(entity =>
            {
                entity.HasKey(e => e.suc_Id)
                    .HasName("PK__tbSucurs__C6E323773E479A3B");

                entity.ToTable("tbSucursales", "Gral");

                entity.Property(e => e.suc_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.suc_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.suc_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.suc_FechaModi).HasColumnType("datetime");

                entity.HasOne(d => d.suc_MunicipioNavigation)
                    .WithMany(p => p.tbSucursales)
                    .HasForeignKey(d => d.suc_Municipio)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Maqui_tbSucursales_Gral_tbMunicipios");
            });

            modelBuilder.Entity<tbUsuarios>(entity =>
            {
                entity.HasKey(e => e.usu_ID)
                    .HasName("PK__tbUsuari__43056324593B9193");

                entity.ToTable("tbUsuarios", "Gral");

                entity.HasIndex(e => e.usu_Usuario, "UQ_Gral_tbUsuarios_usu_Usuario")
                    .IsUnique();

                entity.Property(e => e.usu_Clave).IsRequired();

                entity.Property(e => e.usu_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.usu_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.usu_FechaModi).HasColumnType("datetime");

                entity.Property(e => e.usu_Usuario)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.HasOne(d => d.usu_emp)
                    .WithMany(p => p.tbUsuarios)
                    .HasForeignKey(d => d.usu_empID)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Gral_tbUsuarios_usu_empID_Gral_tbEmpleados_emp_ID");
            });

            modelBuilder.Entity<tbVentas>(entity =>
            {
                entity.HasKey(e => e.ven_Id)
                    .HasName("PK__tbVentas__7BA9B751E63F2D5C");

                entity.ToTable("tbVentas", "Maqui");

                entity.Property(e => e.ven_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.ven_Fecha).HasColumnType("datetime");

                entity.Property(e => e.ven_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ven_FechaModi).HasColumnType("datetime");

                entity.HasOne(d => d.ven_ClienteNavigation)
                    .WithMany(p => p.tbVentas)
                    .HasForeignKey(d => d.ven_Cliente)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Maqui_tbVentas_Gral_tbClientes_ven_Cliente");

                entity.HasOne(d => d.ven_MetodoPagoNavigation)
                    .WithMany(p => p.tbVentas)
                    .HasForeignKey(d => d.ven_MetodoPago)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Maqui_tbVentas_Maqui_tbMetodoPago_ven_MetodoPago");

                entity.HasOne(d => d.ven_SucursalNavigation)
                    .WithMany(p => p.tbVentas)
                    .HasForeignKey(d => d.ven_Sucursal)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Maqui_tbVentas_Maqui_tbSucursales_ven_Sucursal");
            });

            modelBuilder.Entity<tbVentasDetalle>(entity =>
            {
                entity.HasKey(e => e.vde_Id)
                    .HasName("PK__tbVentas__C993F9CFAC606E14");

                entity.ToTable("tbVentasDetalle", "Maqui");

                entity.Property(e => e.vde_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.vde_FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.vde_FechaModi).HasColumnType("datetime");

                entity.Property(e => e.vde_Precio).HasColumnType("decimal(18, 2)");

                entity.HasOne(d => d.vde_ProductoNavigation)
                    .WithMany(p => p.tbVentasDetalle)
                    .HasForeignKey(d => d.vde_Producto)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Maqui_tbVentasDetalles_tbMaqui_Produtos_VD_Producto");

                entity.HasOne(d => d.vde_Venta)
                    .WithMany(p => p.tbVentasDetalle)
                    .HasForeignKey(d => d.vde_VentaId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Maqui_tbVentas_MaquiDetalles_tbVentasDetalle_VD_VentaId");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}